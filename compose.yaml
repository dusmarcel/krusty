services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
  valkey:
    container_name: valkey
    image: valkey/valkey:alpine
    env_file: .env
    command: valkey-server --save 60 1 --loglevel warning --requirepass $VALKEY_PASSWORD
    volumes:
      - valkeydata:/data
  backend:
    container_name: backend
    env_file: .env
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        POSTGRES_HOST: $POSTGRES_HOST
        POSTGRES_DATABASE: $POSTGRES_DATABASE
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        VALKEY_HOST: $VALKEY_HOST
        VALKEY_PORT: $VALKEY_PORT
        VALKEY_PASSWORD: $VALKEY_PASSWORD
        BACKEND_IF: $BACKEND_IF
      target: final
    develop:
      watch:
        - action: rebuild
          path: ./backend
        - action: rebuild
          path: ./shared
    ports:
      - 127.0.0.1:8161:8161
    depends_on:
      - postgres
      - valkey
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_PROTOCOL: $BACKEND_PROTOCOL
        BACKEND_HOST: $BACKEND_HOST
        BACKEND_PORT: $BACKEND_PORT
      target: final
    develop:
      watch:
        - action: rebuild
          path: ./frontend
    ports:
      - 127.0.0.1:8162:80

volumes:
  pgdata:
  valkeydata:
